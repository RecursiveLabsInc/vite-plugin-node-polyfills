name: Tag and Publish Package

on:
  push:
    branches:
      - master

jobs:
  tag:
    name: Tag new version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current version from package.json
        id: version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check
        run: |
          if git rev-list -n 1 "v${{ steps.version.outputs.version }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Tag new version
        id: tag_version
        if: ${{ steps.check.outputs.exists == 'false' }}
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version.outputs.version }}

      - name: Create a GitHub release
        if: ${{ steps.check.outputs.exists == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build-and-publish:
    name: Build and publish package
    runs-on: ubuntu-latest
    needs: tag
    if: ${{ needs.tag.outputs.new_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Build
        run: pnpm build

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        run: pnpm publish --no-git-checks
